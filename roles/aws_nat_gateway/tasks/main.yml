---
- name: Create new nat gateway using an allocation-id
  ec2_vpc_nat_gateway:
    region: "{{ ec2_region }}"
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    state: present
    subnet_id: "{{ public_subnet_id }}"
    allocation_id: "{{ allocation_id }}"
  register: nat_gateway

- name: Wait until NAT-Gateway is available
  ec2_vpc_nat_gateway_facts:
    region: "{{ ec2_region }}"
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    filters:
      subnet-id: "{{ public_subnet_id }}"
      state: ['available']
  register: available_nat_gateway

- name: debug
  debug:
    var: available_nat_gateway

- name: Wait until NAT-Gateway is available
  ec2_vpc_nat_gateway_facts:
    region: "{{ ec2_region }}"
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    filters:
      subnet-id: "{{ public_subnet_id }}"
      state: ['available']
  register: available_nat_gateway
  until: available_nat_gateway.result.0 is defined
  retries: 20
  delay: 20

- name: print available_nat_gateway
  debug:
    var: available_nat_gateway

- name: Set fact Nat Gateways IDs
  set_fact:
    nat_gateway_id: "{{ nat_gateway.nat_gateway_id }}"