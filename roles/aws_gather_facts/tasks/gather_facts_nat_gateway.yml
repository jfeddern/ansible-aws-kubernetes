---
- name: Get nat gateways with specific filter
  ec2_vpc_nat_gateway_facts:
    region: "{{ ec2_region }}"
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    filters:
      subnet-id: "{{ public_subnet_id }}"
      state: ['available']
  register: existing_nat_gateways

- name: Wait until NAT-Gateway is available
  ec2_vpc_nat_gateway_facts:
    region: "{{ ec2_region }}"
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    filters:
      subnet-id: "{{ public_subnet_id }}"
      state: ['available']
  register: available_nat_gateway
  until: available_nat_gateway.result[0].state.find('available') != -1
  retries: 20
  delay: 20

- name: print available_nat_gateway
  debug:
    var: available_nat_gateway

- name: Set fact Nat Gateways IDs
  set_fact:
    nat_gateway_id: "{{ existing_nat_gateways.result[0].nat_gateway_id }}"